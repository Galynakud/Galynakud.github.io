import React, { useState, useEffect } from 'react';

function Resources() {
    const materialPrices = {
        brick: 500,
        wood: 300,
        steel: 100,
        sand: 200,
        glass: 150,
        slate: 120
    };

    const maxResources = {
        brick: 20000,
        wood: 10000,
        steel: 50000,
        sand: 15000,
        glass: 5000,
        slate: 8000
    };

    const buildingMaterials = {
        house: { brick: 66, wood: 6, steel: 3, sand: 17, glass: 6, slate: 40 },
        factory: { brick: 0, wood: 0, steel: 10, sand: 0, glass: 14, slate: 73 },
        hotel: { brick: 92, wood: 0, steel: 0, sand: 4, glass: 18, slate: 14 },
        school: { brick: 0, wood: 0, steel: 85, sand: 16, glass: 27, slate: 32 }
    };

    const [resources, setResources] = useState({ ...maxResources });
    const [budget, setBudget] = useState(10000000);
    const [buildingType, setBuildingType] = useState("house");
    const [feedback, setFeedback] = useState(null);



    useEffect(() => {
        Object.keys(resources).forEach(updateProgressBar);
    }, [resources]);

    useEffect(() => {
        updateBudgetProgress();
    }, [budget]);

    const updateProgressBar = (material) => {
        const percentage = (resources[material] / maxResources[material]) * 100;
        document.getElementById(`${material}-bar`).style.width = `${percentage}%`;
        document.getElementById(`${material}-bar`).textContent = `${percentage.toFixed(2)}%`;
        document.getElementById(material).textContent = resources[material];
    };

    const updateBudgetProgress = () => {
        const percentage = (budget / 10000000) * 100;
        document.getElementById("budget-bar").style.width = `${percentage}%`;
        document.getElementById("budget-bar").textContent = `${percentage.toFixed(2)}%`;
        document.getElementById("budget").textContent = budget.toLocaleString();
    };

    const calculateTotalCost = () => {
        const used = (id) => parseInt(document.getElementById(id).value) || 0;
        const total = used("brick-used") * materialPrices.brick +
                    used("wood-used") * materialPrices.wood +
                    used("steel-used") * materialPrices.steel +
                    used("sand-used") * materialPrices.sand +
                    used("glass-used") * materialPrices.glass +
                    used("slate-used") * materialPrices.slate;
        document.getElementById("cost").textContent = total.toLocaleString() + " $";
        return total;
    };

    const handleBuildingChange = (event) => {
        const type = event.target.value;
        setBuildingType(type);
        if (buildingMaterials[type]) {
            const mat = buildingMaterials[type];
            for (const key in mat) {
                document.getElementById(`${key}-used`).value = mat[key];
            }
            calculateTotalCost();
        }
    };

    const handlePayButtonClick = () => {
        const total = calculateTotalCost();
        if (total > budget) {
            alert("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.");
            return;
        }

        const check = (key) => parseInt(document.getElementById(`${key}-used`).value) || 0;
        for (const key in resources) {
            if (check(key) > resources[key]) {
                alert("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Ä–µ—Å—É—Ä—Å—É: " + key);
                return;
            }
        }

        document.getElementById("confirmation-modal").style.display = "flex";
    };

    const handleConfirmPayButtonClick = () => {
        const used = (key) => parseInt(document.getElementById(`${key}-used`).value) || 0;
        const totalCost = calculateTotalCost();
    
        setBudget(prevBudget => prevBudget - totalCost);
    
        setResources(prevResources => {
            const updated = { ...prevResources };
            for (const key in updated) {
                updated[key] -= used(key);
            }
            return updated;
        });
    
        alert("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞!");
        document.getElementById("confirmation-modal").style.display = "none";
        document.getElementById("feedback-section").style.display = "block";
    };
    
    
    const handleCancelPayButtonClick = () => {
        document.getElementById("confirmation-modal").style.display = "none";
    };

    const handleEmojiClick = (selectedFeedback) => {
        setFeedback(selectedFeedback);
      };

    const handleSubmitFeedback = () => {
        if (!feedback) {
            alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫!");
            return;
        }

        console.log("–í—ñ–¥–≥—É–∫ –Ω–∞ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ:", feedback); 
        document.getElementById("feedback-section").style.display = "none";
        document.getElementById("thank-you-modal").style.display = "flex";
        const comment = document.getElementById("feedback-comment").value;
        console.log("–ö–æ–º–µ–Ω—Ç–∞—Ä:", comment);
        

    };

    const handleCloseThankYouModal = () => {
        document.getElementById("thank-you-modal").style.display = "none"; 
    };

    return (
        <main>
            <section id="resources" className="info-section city-style">
                <div className="icon">üí∞</div>
                <div className="text-content">
                    <h2>–†–µ—Å—É—Ä—Å–∏ –º—ñ—Å—Ç–∞</h2>
                    <p>–û—Å—å –ø–æ—Ç–æ—á–Ω–∏–π –±—é–¥–∂–µ—Ç –º—ñ—Å—Ç–∞, –Ω–∞—è–≤–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç–∞ —ó—Ö –æ–±‚Äô—î–º.</p>
                </div>
            </section>

            <section className="resources-info">
                <h3>–ü–æ—Ç–æ—á–Ω—ñ —Ä–µ—Å—É—Ä—Å–∏</h3>
                <div className="resources-list">
                    <div className="resource-item">
                        <h4>–ë—é–¥–∂–µ—Ç –º—ñ—Å—Ç–∞:</h4>
                        <p>üí≤<span id="budget">{budget.toLocaleString()}</span></p>
                        <div className="progress-bar">
                            <div className="progress" id="budget-bar" style={{ width: "100%" }}>100%</div>
                        </div>
                    </div>
                    <div className="resource-item">
                        <h4>–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏:</h4>
                        <ul>
                            <li>üß± –¶–µ–≥–ª–∞: <span id="brick">{resources.brick}</span> –º¬≥</li>
                            <div className="progress-bar">
                                <div className="progress" id="brick-bar" style={{ width: "100%" }}>100%</div>
                            </div>
                            <li>ü™µ –î–µ—Ä–µ–≤–æ: <span id="wood">{resources.wood}</span> –º¬≥</li>
                            <div className="progress-bar">
                                <div className="progress" id="wood-bar" style={{ width: "100%" }}>100%</div>
                            </div>
                            <li>ü™® –°—Ç–∞–ª—å: <span id="steel">{resources.steel}</span> –º¬≥</li>
                            <div className="progress-bar">
                                <div className="progress" id="steel-bar" style={{ width: "100%" }}>100%</div>
                            </div>
                            <li>üèñÔ∏è –ü—ñ—Å–æ–∫: <span id="sand">{resources.sand}</span> –º¬≥</li>
                            <div className="progress-bar">
                                <div className="progress" id="sand-bar" style={{ width: "100%" }}>100%</div>
                            </div>
                            <li>ü™ü –°–∫–ª–æ: <span id="glass">{resources.glass}</span> –º¬≥</li>
                            <div className="progress-bar">
                                <div className="progress" id="glass-bar" style={{ width: "100%" }}>100%</div>
                            </div>
                            <li>ü™∂ –®–∏—Ñ–µ—Ä: <span id="slate">{resources.slate}</span> –º¬≥</li>
                            <div className="progress-bar">
                                <div className="progress" id="slate-bar" style={{ width: "100%" }}>100%</div>
                            </div>
                        </ul>
                    </div>
                </div>
            </section>

            <section className="building-selection">
                <h3>–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –±—É–¥—ñ–≤–ª—ñ</h3>
                <div className="select-wrapper">
                    <select id="building-type" onChange={handleBuildingChange}>
                        <option value="">-- –û–±–µ—Ä—ñ—Ç—å –±—É–¥—ñ–≤–ª—é --</option>
                        <option value="house">–ë—É–¥–∏–Ω–æ–∫</option>
                        <option value="factory">–§–∞–±—Ä–∏–∫–∞</option>
                        <option value="hotel">–ì–æ—Ç–µ–ª—å</option>
                        <option value="school">–®–∫–æ–ª–∞</option>
                    </select>
                </div>
            

            <section className="resources-input">
                <h3>–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏</h3>
                <div className="resource-container">
                    <label htmlFor="brick-used">üß± –¶–µ–≥–ª–∞: </label>
                    <input type="number" id="brick-used" defaultValue="0" min="0" />
                    </div>
                    <div className="resource-container">
                    <label htmlFor="wood-used">ü™µ –î–µ—Ä–µ–≤–æ: </label>
                    <input type="number" id="wood-used" defaultValue="0" min="0" />
                    </div>
                    <div className="resource-container">
                    <label htmlFor="steel-used">ü™® –°—Ç–∞–ª—å: </label>
                    <input type="number" id="steel-used" defaultValue="0" min="0" />
                    </div>
                    <div className="resource-container">
                    <label htmlFor="sand-used">üèñÔ∏è –ü—ñ—Å–æ–∫: </label>
                    <input type="number" id="sand-used" defaultValue="0" min="0" />
                    </div>
                    <div className="resource-container">
                    <label htmlFor="glass-used">ü™ü –°–∫–ª–æ: </label>
                    <input type="number" id="glass-used" defaultValue="0" min="0" />
                    </div>
                    <div className="resource-container">
                    <label htmlFor="slate-used">ü™∂ –®–∏—Ñ–µ—Ä: </label>
                    <input type="number" id="slate-used" defaultValue="0" min="0" />
                </div>
            </section>
            </section>

            <section className="construction-cost">
                <h3>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ</h3>
                <p>üî® <strong>–í–∞—Ä—Ç—ñ—Å—Ç—å –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞:</strong> <span id="cost">0</span></p>
                <button className ="btn2"  onClick={handlePayButtonClick}>–û–ø–ª–∞—Ç–∏—Ç–∏ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ</button>
            </section>

            <div id="confirmation-modal" className="modal">
                <div className="modal-content">
                <h2>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ–ø–ª–∞—Ç–∏</h2>
                <p>–í–∏ –≥–æ—Ç–æ–≤—ñ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –æ–ø–ª–∞—Ç—É –∑–∞ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ?</p>
                    <button onClick={handleConfirmPayButtonClick}>–¢–∞–∫, –æ–ø–ª–∞—Ç–∏—Ç–∏</button>
                    <button onClick={handleCancelPayButtonClick}>–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                </div>
            </div>

            <section id="feedback-section" style={{ display: 'none', textAlign: 'center', marginTop: '20px' }}>
                <h3>üó£Ô∏è –Ø–∫ –≤–∏ –æ—Ü—ñ–Ω—é—î—Ç–µ —Ü–µ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ?</h3>
                <div id="emoji-feedback" style={{ fontSize: '2rem', marginBottom: '15px' }}>
                <span
          className={`emoji-option ${feedback === 'good' ? 'selected' : ''}`}
          onClick={() => handleEmojiClick('good')} > üòç </span>
        <span
          className={`emoji-option ${feedback === 'ok' ? 'selected' : ''}`}
          onClick={() => handleEmojiClick('ok')} > üôÇ </span>
        <span
          className={`emoji-option ${feedback === 'bad' ? 'selected' : ''}`}
          onClick={() => handleEmojiClick('bad')} > üò° </span>
      </div>
      <textarea
  id="feedback-comment"
  placeholder="–ù–∞–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫ —Ç—É—Ç..."
  style={{ width: '80%', padding: '10px', marginTop: '10px', fontSize: '1rem' }}></textarea>

      <button
        id="submit-feedback"
        style={{ padding: '10px 20px', fontSize: '1rem' }}
        onClick={handleSubmitFeedback}> –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫ </button>
</section>

<div id="thank-you-modal" className="modal" style={{ display: "none" }}>
                <div className="modal-content">
                    <h2>–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!</h2>
                    <p>üéâ –í–∞—à—É –¥—É–º–∫—É –¥—É–∂–µ —Ü—ñ–Ω—É—î–º–æ! –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ –≤ –Ω–∞—à–æ–º—É –º—ñ—Å—Ç—ñ.</p>
                    <button id="close-thank-you-modal" onClick={handleCloseThankYouModal}>–ó–∞–∫—Ä–∏—Ç–∏</button>
                </div>
            </div>


        </main>
    );
}

export default Resources;
